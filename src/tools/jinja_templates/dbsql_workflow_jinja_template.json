{
  "name": "{{ job_name }}",
  "description": "The ***run_customermgmt*** paramater accepts either ***YES*** or ***NO***.  If this XML file has already been ingested, the *dw_init* task does **NOT** remove it (since it is kind of a pain). Therefore, if you want to disable this task and just keep the existing historical customermgmt staging table then change to ***NO***.  It is set to ***YES*** by default.",
  "email_notifications": {
    "no_alert_for_skipped_runs": false
  },
  "webhook_notifications": {},
  "timeout_seconds": 0,
  "max_concurrent_runs": 1,
  "parameters": [
    {
      "name": "catalog",
      "default": "{{ catalog }}"
    },
    {
      "name": "run_customermgmt",
      "default": "YES"
    },
    {
      "name": "scale_factor",
      "default": "{{ scale_factor }}"
    },
    {
      "name": "tpcdi_directory",
      "default": "{{ tpcdi_directory }}"
    },
    {
      "name": "wh_db",
      "default": "{{ wh_target }}_{{ exec_type }}_{{ scale_factor }}"
    }
  ],
  "job_clusters": [
    {
      "job_cluster_key": "{{ job_name }}_cluster",
      "new_cluster": {
        "cluster_name": "",
        "spark_version": "{{ dbr }}",
        "spark_conf": {
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode",
          "spark.sql.shuffle.partitions": "auto",
          "spark.databricks.adaptive.localShuffleReader.enabled": "true"
        },
        "driver_node_type_id": "{{ driver_node_type }}",
        "node_type_id": "{{ worker_node_type }}",
        "custom_tags": {
          "ResourceClass": "SingleNode"
        },
        "spark_env_vars": {
          "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
        },
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "STANDARD",
        "num_workers": 0
      }
    }
  ],
  "tasks": [
    {
      "task_key": "dw_init",
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/dw_init",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "run_customermgmt_YES_NO",
      "depends_on": [
        {
          "task_key": "dw_init"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "condition_task": {
        "op": "EQUAL_TO",
        {% raw %}"left": "{{job.parameters.run_customermgmt}}"{% endraw %},
        "right": "YES"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "scale_factor_over_100",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "true"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "condition_task": {
        "op": "GREATER_THAN",
        {% raw %}"left": "{{job.parameters.scale_factor}}"{% endraw %},
        "right": "100"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_customermgmt_cluster",
      "depends_on": [
        {
          "task_key": "scale_factor_over_100",
          "outcome": "true"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/CustomerMgmtRaw",
        "source": "WORKSPACE"
      },
      "job_cluster_key": "{{ job_name }}_cluster",
      "libraries": [
        {
          "maven": {
            "coordinates": "com.databricks:spark-xml_2.12:0.16.0"
          }
        }
      ],
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_customermgmt_wh",
      "depends_on": [
        {
          "task_key": "scale_factor_over_100",
          "outcome": "false"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/CustomerMgmtRaw",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_BatchDate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch*",
          "tgt_query": "*, cast(substring(_metadata.file_path FROM (position('/Batch', _metadata.file_path) + 6) FOR 1) as int) batchid",
          "add_tgt_schema": ", batchid INT NOT NULL COMMENT 'Batch ID when this record was inserted'",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}"{% endraw %},
          "filename": "BatchDate.txt",
          "part": "",
          "raw_schema": "batchdate DATE NOT NULL COMMENT 'Batch date'",
          "table": "BatchDate"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_DimDate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "*",
          "add_tgt_schema": "",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}"{% endraw %},
          "filename": "Date.txt",
          "part": "",
          "raw_schema": "sk_dateid BIGINT NOT NULL COMMENT 'Surrogate key for the date', datevalue DATE NOT NULL COMMENT 'The date stored appropriately for doing comparisons in the Data Warehouse', datedesc STRING NOT NULL COMMENT 'The date in full written form e.g. July 7 2004', calendaryearid INT NOT NULL COMMENT 'Year number as a number', calendaryeardesc STRING NOT NULL COMMENT 'Year number as text', calendarqtrid INT NOT NULL COMMENT 'Quarter as a number e.g. 20042', calendarqtrdesc STRING NOT NULL COMMENT 'Quarter as text e.g. 2004 Q2', calendarmonthid INT NOT NULL COMMENT 'Month as a number e.g. 20047', calendarmonthdesc STRING NOT NULL COMMENT 'Month as text e.g. 2004 July', calendarweekid INT NOT NULL COMMENT 'Week as a number e.g. 200428', calendarweekdesc STRING NOT NULL COMMENT 'Week as text e.g. 2004-W28', dayofweeknum INT NOT NULL COMMENT 'Day of week as a number e.g. 3', dayofweekdesc STRING NOT NULL COMMENT 'Day of week as text e.g. Wednesday', fiscalyearid INT NOT NULL COMMENT 'Fiscal year as a number e.g. 2005', fiscalyeardesc STRING NOT NULL COMMENT 'Fiscal year as text e.g. 2005', fiscalqtrid INT NOT NULL COMMENT 'Fiscal quarter as a number e.g. 20051', fiscalqtrdesc STRING NOT NULL COMMENT 'Fiscal quarter as text e.g. 2005 Q1', holidayflag BOOLEAN COMMENT 'Indicates holidays'",
          "table": "DimDate"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_DimTime",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "*",
          "add_tgt_schema": "",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}"{% endraw %},
          "filename": "Time.txt",
          "part": "",
          "raw_schema": "sk_timeid BIGINT NOT NULL COMMENT 'Surrogate key for the time', timevalue STRING NOT NULL COMMENT 'The time stored appropriately for doing', hourid INT NOT NULL COMMENT 'Hour number as a number e.g. 01', hourdesc STRING NOT NULL COMMENT 'Hour number as text e.g. 01', minuteid INT NOT NULL COMMENT 'Minute as a number e.g. 23', minutedesc STRING NOT NULL COMMENT 'Minute as text e.g. 01:23', secondid INT NOT NULL COMMENT 'Second as a number e.g. 45', seconddesc STRING NOT NULL COMMENT 'Second as text e.g. 01:23:45', markethoursflag BOOLEAN COMMENT 'Indicates a time during market hours', officehoursflag BOOLEAN COMMENT 'Indicates a time during office hours'",
          "table": "DimTime"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_FinWire",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "*, substring(value, 16, 3) rectype",
          "add_tgt_schema": ", rectype STRING COMMENT 'Indicates the type of table into which this record will eventually be parsed: CMP FIN or SEC'",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}_stage"{% endraw %},
          "filename": "FINWIRE[0-9][0-9][0-9][0-9]Q[1-4]",
          "part": "PARTITIONED BY (rectype)",
          "raw_schema": "value STRING COMMENT 'Pre-parsed String Values of all FinWire files'",
          "table": "FinWire"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_StatusType",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "*",
          "add_tgt_schema": "",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}"{% endraw %},
          "filename": "StatusType.txt",
          "part": "",
          "raw_schema": "st_id STRING NOT NULL COMMENT 'Status code', st_name STRING NOT NULL COMMENT 'Status description'",
          "table": "StatusType"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_TaxRate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "*",
          "add_tgt_schema": "",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}"{% endraw %},
          "filename": "TaxRate.txt",
          "part": "",
          "raw_schema": "tx_id STRING NOT NULL COMMENT 'Tax rate code', tx_name STRING NOT NULL COMMENT 'Tax rate description', tx_rate FLOAT NOT NULL COMMENT 'Tax rate'",
          "table": "TaxRate"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_TradeType",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "*",
          "add_tgt_schema": "",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}"{% endraw %},
          "filename": "TradeType.txt",
          "part": "",
          "raw_schema": "tt_id STRING NOT NULL COMMENT 'Trade type code', tt_name STRING NOT NULL COMMENT 'Trade type description', tt_is_sell INT NOT NULL COMMENT 'Flag indicating a sale', tt_is_mrkt INT NOT NULL COMMENT 'Flag indicating a market order'",
          "table": "TradeType"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_industry",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt_cluster"
        },
        {
          "task_key": "ingest_customermgmt_wh"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Ingest_Raw",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "*",
          "add_tgt_schema": "",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}"{% endraw %},
          "filename": "Industry.txt",
          "part": "",
          "raw_schema": "in_id STRING NOT NULL COMMENT 'Industry code', in_name STRING NOT NULL COMMENT 'Industry description', in_sc_id STRING NOT NULL COMMENT 'Sector identifier'",
          "table": "industry"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_DimBroker",
      "depends_on": [
        {
          "task_key": "ingest_DimDate"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/DimBroker",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Stage_DimCustomerStg",
      "depends_on": [
        {
          "task_key": "ingest_BatchDate"
        },
        {
          "task_key": "ingest_StatusType"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/DimCustomerStg",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_DimAccount",
      "depends_on": [
        {
          "task_key": "Silver_DimBroker"
        },
        {
          "task_key": "Stage_DimCustomerStg"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/DimAccount",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Gold_FactCashBalances",
      "depends_on": [
        {
          "task_key": "Silver_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/FactCashBalances",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_Prospect",
      "depends_on": [
        {
          "task_key": "Stage_DimCustomerStg"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Prospect",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_DimCustomer",
      "depends_on": [
        {
          "task_key": "ingest_TaxRate"
        },
        {
          "task_key": "Silver_Prospect"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/DimCustomer",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_DimCompany",
      "depends_on": [
        {
          "task_key": "ingest_FinWire"
        },
        {
          "task_key": "ingest_StatusType"
        },
        {
          "task_key": "ingest_industry"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/DimCompany",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_DimSecurity",
      "depends_on": [
        {
          "task_key": "Silver_DimCompany"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/DimSecurity",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Gold_FactWatches",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Stage_DimCustomerStg"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/FactWatches",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_DimTrade",
      "depends_on": [
        {
          "task_key": "ingest_TradeType"
        },
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Silver_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/DimTrade",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_FactHoldings",
      "depends_on": [
        {
          "task_key": "Silver_DimTrade"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/FactHoldings",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Silver_Financial",
      "depends_on": [
        {
          "task_key": "Silver_DimCompany"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/Financial",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "Gold_FactMarketHistory",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Silver_Financial"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/FactMarketHistory",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    }
  ]
}