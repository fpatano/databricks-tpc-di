{
  "name": "{{ job_name }}",
  "description": "The ***run_customermgmt*** paramater accepts either ***YES*** or ***NO***.  If this XML file has already been ingested, the *dw_init* task does **NOT** remove it (since it is kind of a pain). Therefore, if you want to disable this task and just keep the existing historical customermgmt staging table then change to ***NO***.  It is set to ***YES*** by default.",
  "email_notifications": {
    "no_alert_for_skipped_runs": false
  },
  "webhook_notifications": {},
  "timeout_seconds": 0,
  "max_concurrent_runs": 1,
  "parameters": [
    {
      "name": "catalog",
      "default": "{{ catalog }}"
    },
    {
      "name": "run_customermgmt",
      "default": "YES"
    },
    {
      "name": "scale_factor",
      "default": "{{ scale_factor }}"
    },
    {
      "name": "tpcdi_directory",
      "default": "{{ tpcdi_directory }}"
    },
    {
      "name": "wh_db",
      "default": "{{ wh_target }}_{{ exec_type }}"
    },
    {
      "name": "predictive_optimization",
      "default": "{{ pred_opt }}"
    }
  ],
  "job_clusters": [
    {
      "job_cluster_key": "{{ job_name }}_cluster",
      "new_cluster": {
        "cluster_name": "",
        "spark_version": "{{ dbr }}",
        "spark_conf": {
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode",
          "spark.sql.shuffle.partitions": "auto",
          "spark.databricks.adaptive.localShuffleReader.enabled": "true"
        },
        "driver_node_type_id": "{{ driver_node_type }}",
        "node_type_id": "{{ worker_node_type }}",
        "custom_tags": {
          "ResourceClass": "SingleNode"
        },
        "spark_env_vars": {
          "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
        },
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "STANDARD",
        "num_workers": 0
      }
    }
  ],
  "tasks": [
    {
      "task_key": "dw_init",
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/dw_init",
        "base_parameters": {
          {% raw %}"pred_opt": "{{job.parameters.predictive_optimization}}"{% endraw %}
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "run_customermgmt_YES_NO",
      "depends_on": [
        {
          "task_key": "dw_init"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "condition_task": {
        "op": "EQUAL_TO",
        {% raw %}"left": "{{job.parameters.run_customermgmt}}"{% endraw %},
        "right": "YES"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_customermgmt",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "true"
        }
      ],
      "run_if": "ALL_SUCCESS",
      {% if scale_factor > 100 %}
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/CustomerMgmtRaw_mavenlib",
        "base_parameters": {
          "xml_lib": "com.databricks.spark.xml"
        },
        "source": "WORKSPACE"
      },
      "job_cluster_key": "{{ job_name }}_cluster",
      "libraries": [
        {
          "maven": {
            "coordinates": "com.databricks:spark-xml_2.12:0.18.0"
          }
        }
      ],
      {% else %}
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/CustomerMgmtRaw",
        "base_parameters": {
          "xml_lib": "xml"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      {% endif %}
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_DimDate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Historical",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "BIGINT(val[0]) sk_dateid, DATE(val[1]) datevalue, val[2] datedesc, INT(val[3]) calendaryearid, val[4] calendaryeardesc, INT(val[5]) calendarqtrid, val[6] calendarqtrdesc, INT(val[7]) calendarmonthid, val[8] calendarmonthdesc, INT(val[9]) calendarweekid, val[10] calendarweekdesc, INT(val[11]) dayofweeknum, val[12] dayofweekdesc, INT(val[13]) fiscalyearid, val[14] fiscalyeardesc, INT(val[15]) fiscalqtrid, val[16] fiscalqtrdesc, BOOLEAN(val[17]) holidayflag",
          "filename": "Date.txt",
          "table": "DimDate"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_DimTime",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Historical",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "BIGINT(val[0]) sk_timeid, val[1] timevalue, INT(val[2]) hourid, val[3] hourdesc, INT(val[4]) minuteid, val[5] minutedesc, INT(val[6]) secondid, val[7] seconddesc, BOOLEAN(val[8]) markethoursflag, BOOLEAN(val[9]) officehoursflag",
          "filename": "Time.txt",
          "table": "DimTime"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_StatusType",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Historical",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "val[0] st_id, val[1] st_name",
          "filename": "StatusType.txt",
          "table": "StatusType"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_TaxRate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Historical",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "val[0] tx_id, val[1] tx_name, FLOAT(val[2]) tx_rate",
          "filename": "TaxRate.txt",
          "table": "TaxRate"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_TradeType",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Historical",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "val[0] tt_id, val[1] tt_name, INT(val[2]) tt_is_sell, INT(val[3]) tt_is_mrkt",
          "filename": "TradeType.txt",
          "table": "TradeType"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_industry",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Historical",
        "base_parameters": {
          "path": "Batch1",
          "tgt_query": "val[0] in_id, val[1] in_name, val[2] in_sc_id",
          "filename": "Industry.txt",
          "table": "Industry"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_BatchDate",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Incremental",
        "base_parameters": {
          "view": "v_BatchDate",
          "table": "BatchDate",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}_{{job.parameters.scale_factor}}"{% endraw %}
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_FinWire",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Incremental",
        "base_parameters": {
          "view": "v_FinWire",
          "table": "FinWire",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}_{{job.parameters.scale_factor}}_stage"{% endraw %}
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "ingest_ProspectIncremental",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "false"
        },
        {
          "task_key": "ingest_customermgmt"
        }
      ],
      "run_if": "AT_LEAST_ONE_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Ingest_Incremental",
        "base_parameters": {
          "view": "v_Prospect",
          "table": "ProspectIncremental",
          {% raw %}"tgt_db": "{{job.parameters.wh_db}}_{{job.parameters.scale_factor}}_stage"{% endraw %}
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 5000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimBroker",
      "depends_on": [
        {
          "task_key": "ingest_DimDate"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/DimBroker",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimCustomer",
      "depends_on": [
        {
          "task_key": "ingest_ProspectIncremental"
        },
        {
          "task_key": "ingest_TaxRate"
        },
        {
          "task_key": "ingest_BatchDate"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/DimCustomer",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimAccount",
      "depends_on": [
        {
          "task_key": "Silver_DimBroker"
        },
        {
          "task_key": "Silver_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/DimAccount",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Gold_FactCashBalances",
      "depends_on": [
        {
          "task_key": "Silver_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/FactCashBalances",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_Prospect",
      "depends_on": [
        {
          "task_key": "Silver_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Prospect",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimCompany",
      "depends_on": [
        {
          "task_key": "ingest_FinWire"
        },
        {
          "task_key": "ingest_industry"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/DimCompany",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimSecurity",
      "depends_on": [
        {
          "task_key": "Silver_DimCompany"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/DimSecurity",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Gold_FactWatches",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Silver_DimCustomer"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/FactWatches",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_DimTrade",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Silver_DimAccount"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/DimTrade",
        "base_parameters": {
          "wh_timezone": "set timezone = GMT"
        },
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_FactHoldings",
      "depends_on": [
        {
          "task_key": "Silver_DimTrade"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/FactHoldings",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Silver_Financial",
      "depends_on": [
        {
          "task_key": "Silver_DimCompany"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/Financial",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    },
    {
      "task_key": "Gold_FactMarketHistory",
      "depends_on": [
        {
          "task_key": "Silver_DimSecurity"
        },
        {
          "task_key": "Silver_Financial"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/{{ exec_folder }}/FactMarketHistory",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    }
  ]
}