{
  "name": "{{ job_name }}",
  "email_notifications": {},
  "webhook_notifications": {},
  "timeout_seconds": 0,
  "max_concurrent_runs": 1,
  "format": "MULTI_TASK",
  "parameters": [
    {
      "name": "warehouse_id",
      "default": "{{ wh_id }}"
    },
    {
      "name": "catalog",
      "default": "{{ catalog }}"
    },
    {
      "name": "scale_factor",
      "default": "{{ scale_factor }}"
    },
    {
      "name": "wh_db",
      "default": "{{ wh_target }}_dbt_{{ scale_factor }}"
    },
    {
      "name": "schema",
      "default": "{{ wh_target }}_dbt_{{ scale_factor }}"
    },
    {
      "name": "tpcdi_directory",
      "default": "{{ tpcdi_directory }}"
    }
  ],
  "git_source": {
    "git_url": "https://github.com/rlsalcido24/dbtpcdi",
    "git_provider": "gitHub",
    "git_branch": "main"
  },
  "job_clusters": [
    {
      "job_cluster_key": "{{ job_name }}_cluster",
      "new_cluster": {
        "cluster_name": "",
        "spark_version": "{{ dbr }}",
        "spark_conf": {
          "spark.master": "local[*, 4]",
          "spark.databricks.cluster.profile": "singleNode",
          "spark.sql.shuffle.partitions": "auto"
        },
        "driver_node_type_id": "{{ driver_node_type }}",
        "node_type_id": "{{ worker_node_type }}",
        "custom_tags": {
          "ResourceClass": "SingleNode"
        },
        "spark_env_vars": {
          "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
        },
        "enable_elastic_disk": true,
        "data_security_mode": "SINGLE_USER",
        "runtime_engine": "STANDARD",
        "num_workers": 0
      }
    }
  ],
  "tasks": [
    {
      "task_key": "dw_init",
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/ST_MVs/dw_init",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "max_retries": 2,
      "min_retry_interval_millis": 10000,
      "retry_on_timeout": false,
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "run_customermgmt_YES_NO",
      "depends_on": [
        {
          "task_key": "dw_init"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "condition_task": {
        "op": "EQUAL_TO",
        {% raw %}"left": "{{job.parameters.run_customermgmt}}"{% endraw %},
        "right": "YES"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "scale_factor_over_100",
      "depends_on": [
        {
          "task_key": "run_customermgmt_YES_NO",
          "outcome": "true"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "condition_task": {
        "op": "GREATER_THAN",
        {% raw %}"left": "{{job.parameters.scale_factor}}"{% endraw %},
        "right": "100"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_customermgmt_cluster",
      "depends_on": [
        {
          "task_key": "scale_factor_over_100",
          "outcome": "true"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/incremental_batches/bronze/CustomerMgmtRaw",
        "source": "WORKSPACE"
      },
      "job_cluster_key": "{{ job_name }}_cluster",
      "libraries": [
        {
          "maven": {
            "coordinates": "com.databricks:spark-xml_2.12:0.16.0"
          }
        }
      ],
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "ingest_customermgmt_wh",
      "depends_on": [
        {
          "task_key": "scale_factor_over_100",
          "outcome": "false"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "notebook_task": {
        "notebook_path": "{{ repo_src_path }}/single_batch/SQL/CustomerMgmtRaw",
        "source": "WORKSPACE",
        "warehouse_id": "{{ wh_id }}"
      },
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      },
      "webhook_notifications": {}
    },
    {
      "task_key": "dbt-tpcdi",
      "depends_on": [
        {
          "task_key": "dw_init"
        }
      ],
      "run_if": "ALL_SUCCESS",
      "dbt_task": {
        "project_directory": "",
        "commands": [
          "dbt run --vars '{scalefactor: {{scale_factor}}, catalog: tpcdi, prodschema: {{ wh_target }}_dbt_{{ scale_factor }}, stagingschema: {{ wh_target }}_dbt_{{ scale_factor }}_stage}'"
        ],
        "schema": "{{ wh_target }}_dbt_{{ scale_factor }}",
        "warehouse_id": "{{ wh_id }}",
        "catalog": "{{ catalog }}"
      },
      "{{compute_key}}": "{{ job_name }}_compute",
      "libraries": [
        {
          "pypi": {
            "package": "dbt-databricks"
          }
        }
      ],
      "timeout_seconds": 0,
      "email_notifications": {},
      "notification_settings": {
        "no_alert_for_skipped_runs": false,
        "no_alert_for_canceled_runs": false,
        "alert_on_last_attempt": false
      }
    }
  ]
}